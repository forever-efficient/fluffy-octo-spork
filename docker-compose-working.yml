services:
  #Cloudflared
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    command: proxy-dns
    environment:
      - "TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query"
      - "TUNNEL_DNS_PORT=5053"
      - "TUNNEL_DNS_ADDRESS=0.0.0.0"
    restart: unless-stopped
  # Ollama Service
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
    networks:
      - ai_network
    # GPU support removed - running on CPU only

  # Open WebUI Service
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    ports:
      - "3000:8080"
    volumes:
      - open_webui_data:/app/backend/data
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-your-secret-key-here}
      - WEBUI_AUTH=true
      - ENABLE_SIGNUP=false
      - DEFAULT_USER_ROLE=user
    depends_on:
      - ollama
    networks:
      - ai_network
    labels:
      # Cloudflare Tunnel labels
      - "cloudflare.enabled=true"
      - "cloudflare.http.routers.open-webui.rule=Host(`webui.modernwizard.win`)"
      - "cloudflare.http.services.open-webui.loadbalancer.server.port=8080"

  # n8n Service
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - N8N_USER_MANAGEMENT_DISABLED=true 
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=changeme123
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=https://n8n.modernwizard.win/
      - GENERIC_TIMEZONE=UTC
      - N8N_SECURE_COOKIE=false
      - N8N_METRICS=true
      - DB_TYPE=sqlite
    networks:
      - ai_network
    labels:
      # Cloudflare Tunnel labels
      - "cloudflare.enabled=true"
      - "cloudflare.http.routers.n8n.rule=Host(`n8n.modernwizard.win`)"
      - "cloudflare.http.services.n8n.loadbalancer.server.port=5678"

  # Traefik Reverse Proxy (Optional - for local access)
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.tlschallenge=true
      - --certificatesresolvers.cloudflare.acme.email=${ACME_EMAIL:-admin@modernwizard.win}
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/letsencrypt
    networks:
      - ai_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.local`)"
      - "traefik.http.routers.traefik.service=api@internal"

volumes:
  ollama_data:
    driver: local
  open_webui_data:
    driver: local
  n8n_data:
    driver: local
  traefik_data:
    driver: local

networks:
  ai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16