{
  "name": "Legal Documents Migration",
  "nodes": [
    {
      "id": "migration-webhook",
      "name": "Migration Trigger",
      "parameters": {
        "httpMethod": "POST",
        "options": {},
        "path": "migrate-documents",
        "responseMode": "responseNode"
      },
      "position": [
        0,
        0
      ],
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1
    },
    {
      "credentials": {
        "supabaseApi": "PLACEHOLDER_FOR_SUPABASE_CREDENTIALS"
      },
      "id": "get-docs",
      "name": "Get Existing Documents",
      "parameters": {
        "filters": {
          "conditions": [
            {}
          ]
        },
        "operation": "get",
        "tableId": "legal_documents"
      },
      "position": [
        200,
        0
      ],
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1
    },
    {
      "id": "batch-docs",
      "name": "Batch Legal Documents",
      "parameters": {
        "batchSize": 10,
        "options": {}
      },
      "position": [
        400,
        0
      ],
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3
    },
    {
      "id": "convert-to-docs",
      "name": "Convert to Documents",
      "parameters": {
        "jsCode": "// Convert legal documents to LangChain Document format\nconst items = [];\n\nfor (const item of $input.all()) {\n  const doc = item.json;\n  \n  // Create LangChain Document format\n  const document = {\n    pageContent: doc.content || '',\n    metadata: {\n      title: doc.title || 'Untitled',\n      type: doc.type || 'legal_document',\n      category: doc.category || 'general',\n      jurisdiction: doc.jurisdiction || 'unknown',\n      date_created: doc.date_created || new Date().toISOString().split('T')[0],\n      source: 'legacy_migration',\n      original_id: doc.id,\n      legacy_table: 'legal_documents'\n    }\n  };\n  \n  items.push({\n    json: document\n  });\n}\n\nreturn items;"
      },
      "position": [
        600,
        0
      ],
      "type": "n8n-nodes-base.code",
      "typeVersion": 2
    },
    {
      "id": "text-splitter-migration",
      "name": "Split Into Chunks",
      "parameters": {
        "chunkOverlap": 200,
        "chunkSize": 1000,
        "options": {}
      },
      "position": [
        800,
        0
      ],
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacter",
      "typeVersion": 1
    },
    {
      "credentials": {
        "supabaseApi": "PLACEHOLDER_FOR_SUPABASE_CREDENTIALS"
      },
      "id": "insert-vectors-migration",
      "name": "Insert Vectors",
      "parameters": {
        "mode": "insertDocuments",
        "options": {},
        "tableName": "legal_documents_vectors"
      },
      "position": [
        1000,
        0
      ],
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1
    },
    {
      "credentials": {
        "supabaseApi": "PLACEHOLDER_FOR_SUPABASE_CREDENTIALS"
      },
      "id": "log-migration",
      "name": "Log Migration Result",
      "parameters": {
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "file_name",
              "fieldValue": "legacy_migration_batch"
            },
            {
              "fieldId": "title",
              "fieldValue": "Legacy Documents Migration"
            },
            {
              "fieldId": "document_type",
              "fieldValue": "migration"
            },
            {
              "fieldId": "category",
              "fieldValue": "system"
            },
            {
              "fieldId": "jurisdiction",
              "fieldValue": "all"
            },
            {
              "fieldId": "processing_status",
              "fieldValue": "completed"
            },
            {
              "fieldId": "chunks_created",
              "fieldValue": "={{ $('Split Into Chunks').all().length }}"
            },
            {
              "fieldId": "processed_at",
              "fieldValue": "={{ new Date().toISOString() }}"
            },
            {
              "fieldId": "source",
              "fieldValue": "legacy_migration"
            }
          ]
        },
        "operation": "insert",
        "tableId": "document_processing_logs"
      },
      "position": [
        1200,
        0
      ],
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1
    },
    {
      "id": "webhook-response-migration",
      "name": "Migration Complete Response",
      "parameters": {
        "options": {},
        "respondWith": "json",
        "responseBody": "={{ { \"status\": \"success\", \"message\": \"Migration completed successfully\", \"documents_processed\": $('Get Existing Documents').all().length, \"chunks_created\": $('Split Into Chunks').all().length } }}"
      },
      "position": [
        1400,
        0
      ],
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1
    }
  ],
  "connections": {
    "Batch Legal Documents": {
      "main": [
        [
          {
            "index": 0,
            "node": "Convert to Documents",
            "type": "main"
          }
        ]
      ]
    },
    "Convert to Documents": {
      "main": [
        [
          {
            "index": 0,
            "node": "Split Into Chunks",
            "type": "main"
          }
        ]
      ]
    },
    "Get Existing Documents": {
      "main": [
        [
          {
            "index": 0,
            "node": "Batch Legal Documents",
            "type": "main"
          }
        ]
      ]
    },
    "Insert Vectors": {
      "main": [
        [
          {
            "index": 0,
            "node": "Log Migration Result",
            "type": "main"
          }
        ]
      ]
    },
    "Log Migration Result": {
      "main": [
        [
          {
            "index": 0,
            "node": "Migration Complete Response",
            "type": "main"
          }
        ]
      ]
    },
    "Migration Trigger": {
      "main": [
        [
          {
            "index": 0,
            "node": "Get Existing Documents",
            "type": "main"
          }
        ]
      ]
    },
    "Split Into Chunks": {
      "main": [
        [
          {
            "index": 0,
            "node": "Insert Vectors",
            "type": "main"
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "meta": {
    "templateCredsSetupCompleted": true
  }
}